---
- name: Configure HTTP Basic Authentication
  htpasswd:
    path: /etc/nginx/{{ item.0.domain }}.htpasswd
    name: "{{ item.1.username }}"
    password: "{{ item.1.password }}"
    owner: root
    group: www-data
    mode: 0640
  when: item.1 is defined
  with_subelements:
    - "{{ letsencryptnginx_websites }}"
    - http_basic_authentication.credentials
    - skip_missing: True
  become: true

- name: Configure HTTP Basic Authentication for aliases
  htpasswd:
    path: /etc/nginx/{{ item.0.password_filename }}
    name: "{{ item.1.username }}"
    password: "{{ item.1.password }}"
    owner: root
    group: www-data
    mode: 0640
  when: item.1 is defined
  with_subelements:
    - "{{ letsencryptnginx_websites | selectattr('aliases','defined') | map(attribute='aliases') | flatten | selectattr('http_basic_authentication','defined') | map(attribute='http_basic_authentication') | flatten }}"
    - credentials
    - skip_missing: True
  become: true

# Will always cause changes
- name: Delete outdated files and directories
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - /etc/nginx/proxy-params
    - /etc/nginx/sites-available
    - /etc/nginx/sites-enabled
  become: true

- name: Create sites-enabled directory
  file:
    path: /etc/nginx/sites-enabled
    state: directory
  become: true

- name: Copy default site config
  copy:
    src: 00-default
    dest: /etc/nginx/sites-enabled
  notify: restart nginx
  become: true

- name: Copy snippets
  copy:
    src: "{{ item }}"
    dest: /etc/nginx/snippets/
  loop:
    - common_site_configuration
    - proxy_params
  notify: restart nginx
  become: true

- name: Copy site configs
  template:
    src: site.j2
    dest: /etc/nginx/sites-enabled/{{ item['domain'] }}
  loop: "{{ letsencryptnginx_websites }}"
  notify: restart nginx
  become: true
